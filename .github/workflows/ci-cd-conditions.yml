name: CI-CD-CONDITIONS
on:
  workflow_dispatch:
    inputs:
      product:
        description: 'Product name'
        required: true
        type: string
      template:
        description: 'Template name'
        required: true
        type: string

env:
  PRODUCT: ${{ inputs.product }}
  TEMPLATE: ${{ inputs.template }}
  REGISTRY: ghcr.io
  ACTOR: saman-core
  IMAGE_APP_NAME: conditions-${{ inputs.product }}-${{ inputs.template }}
  APP_NAME: conditions-${{ inputs.product }}-${{ inputs.template }}
  EKS_CLUSTER_NAME: my-cluster
  AWS_REGION: us-east-1
  N_REPLICA: 1
  DEPLOY_HASH: ''

jobs:
  build_contenizer:
    name: Build & Contenerize App
    runs-on: ubuntu-latest

    steps:
      - name: Log inputs
        run: |
          echo "Product: $PRODUCT"
          echo "Template: $TEMPLATE"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout product-ops
        uses: actions/checkout@v4
        with:
          repository: saman-core/product-ops
          path: product-ops

      - name: Set env DEPLOY_HASH
        run: |
          cd product-ops/
          DEPLOY_HASH=$(git rev-parse HEAD)
          cd ..

      - name: Copy files
        run: |
          cp product-ops/$(echo $PRODUCT)/templates/$(echo $TEMPLATE)/conditions/* ./src/main/resources/
          ls src/main/resources/

      - name: Setup graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'mandrel'
          github-token: ${{ secrets.GIT_TOKEN }}
          native-image-job-reports: 'true'
          version: '22.3.3.1-Final'

      - name: Build native app
        run: |
          ./mvnw package -Dnative -DskipTests

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACTOR }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Container app build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./src/main/docker/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ACTOR }}/${{ env.IMAGE_APP_NAME }}:${{ env.DEPLOY_HASH }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy app to EKS
        run: |
          echo "$DEPLOY_HASH"
          sed -i -e 's/CONTAINER_IMAGE/${{ env.REGISTRY }}\/${{ env.ACTOR }}\/${{ env.IMAGE_APP_NAME }}:${{ env.DEPLOY_HASH }}/g' -e 's/APP_VERSION/${{ github.run_number }}/g' -e 's/APP_NAME/${{ env.APP_NAME }}/g' -e 's/DEPLOY_HASH/${{ env.DEPLOY_HASH }}/g' -e 's/N_REPLICA/${{ env.N_REPLICA }}/g' ./deployment.yml
          kubectl delete -f ./deployment.yml -n api || true
          kubectl apply -f ./deployment.yml -n api
